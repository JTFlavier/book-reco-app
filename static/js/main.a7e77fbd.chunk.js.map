{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["output_text","formReducer","state","event","reset","book1","book2","book3","book4","book5","_objectSpread","_defineProperty","name","value","App","_useReducer","useReducer","count","_useReducer2","_slicedToArray","formData","setFormData","_useState","useState","_useState2","submitting","setSubmitting","handleChange","target","React","createElement","className","onSubmit","preventDefault","setTimeout","onChange","type","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"2MAMMA,SAAc,mTAEdC,EAAc,SAACC,EAAOC,GAC1B,OAAGA,EAAMC,MACA,CACLC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,IAIZC,YAAA,GACKR,EAAKS,YAAA,GACPR,EAAMS,KAAOT,EAAMU,SA+DRC,MA3Df,WAAe,IAAAC,EACmBC,qBAAWf,EAAa,CAACgB,MAAM,MAAKC,EAAAC,YAAAJ,EAAA,GAA7DK,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAAAI,EACQC,oBAAS,GAAMC,EAAAL,YAAAG,EAAA,GAA5CG,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAc1BG,EAAe,SAAAxB,GACnBkB,EAAY,CACVT,KAAMT,EAAMyB,OAAOhB,KACnBC,MAAOV,EAAMyB,OAAOf,SAIxB,OACEgB,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,UAAI,2BACHL,GACCI,IAAAC,cAAA,OAAKC,UAAU,qBACZ/B,GAUL6B,IAAAC,cAAA,QAAME,SAlCW,SAAA7B,GACnBA,EAAM8B,iBACNP,GAAc,GAEdQ,WAAW,WACTR,GAAc,GACdL,EAAY,CACVjB,OAAO,KAER,OA0BCyB,IAAAC,cAAA,gBACED,IAAAC,cAAA,aACED,IAAAC,cAAA,SAAG,UACHD,IAAAC,cAAA,SAAOlB,KAAK,QAAQuB,SAAUR,EAAcd,MAAOO,EAASf,OAAS,KACrEwB,IAAAC,cAAA,SAAG,UACHD,IAAAC,cAAA,SAAOlB,KAAK,QAAQuB,SAAUR,EAAcd,MAAOO,EAASd,OAAS,KACrEuB,IAAAC,cAAA,SAAG,UACHD,IAAAC,cAAA,SAAOlB,KAAK,QAAQuB,SAAUR,EAAcd,MAAOO,EAASb,OAAS,KACrEsB,IAAAC,cAAA,SAAG,UACHD,IAAAC,cAAA,SAAOlB,KAAK,QAAQuB,SAAUR,EAAcd,MAAOO,EAASZ,OAAS,KACrEqB,IAAAC,cAAA,SAAG,UACHD,IAAAC,cAAA,SAAOlB,KAAK,QAAQuB,SAAUR,EAAcd,MAAOO,EAASX,OAAS,OAGzEoB,IAAAC,cAAA,UAAQM,KAAK,UAAS,aClEfC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzB,IAAAC,cAACD,IAAM0B,WAAU,KACf1B,IAAAC,cAAChB,EAAG,QAORuB","file":"static/js/main.a7e77fbd.chunk.js","sourcesContent":["import React, { useReducer, useState } from 'react';\nimport './App.css';\n\n//TUTORIAL: https://www.digitalocean.com/community/tutorials/how-to-build-forms-in-react\n\n\nconst output_text = \"You might like to read the following:\\n\\nThe making of Pride and Prejudice\\nSusie Conklin\\n\\nMy Sister's Keeper\\nJodi Picoult\\n\\nThe Diamond Age\\nNeal Stephenson\\n\\nThe new rulers of the world\\nJohn Pilger\\n\\nRoberto Rossellini: Magician of the Real\\nDavid Forgacs \\n\\n\\nSource: https://www.readgeek.com\"\n\nconst formReducer = (state, event) => {\n  if(event.reset) {\n    return {\n      book1: '',\n      book2: '',\n      book3: '',\n      book4: '',\n      book5: '',\n    }\n  }\n\n return {\n   ...state,\n   [event.name]: event.value\n }\n}\n\nfunction App() {\n  const [formData, setFormData] = useReducer(formReducer, {count:100});\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSubmitting(true);\n\n    setTimeout(() => {\n      setSubmitting(false);\n      setFormData({\n        reset: true\n      })\n    }, 10000)\n  }\n\n  const handleChange = event => {\n    setFormData({\n      name: event.target.name,\n      value: event.target.value,\n    });\n  }\n\n  return(\n    <div className=\"wrapper\">\n      <h1>Book Recommender System</h1>\n      {submitting &&\n        <div className='display-linebreak'>\n          {output_text}\n\n          {/* You are submitting the following:\n          <ul>\n            {Object.entries(formData).map(([name, value]) => (\n              <li key={name}><strong>{name}</strong>: {value.toString()}</li>\n            ))}\n          </ul> */}\n        </div>\n      }\n      <form onSubmit={handleSubmit}>\n        <fieldset>\n          <label>\n            <p>Book 1</p>\n            <input name=\"book1\" onChange={handleChange} value={formData.book1 || ''}/>\n            <p>Book 2</p>\n            <input name=\"book2\" onChange={handleChange} value={formData.book2 || ''}/>\n            <p>Book 3</p>\n            <input name=\"book3\" onChange={handleChange} value={formData.book3 || ''}/>\n            <p>Book 4</p>\n            <input name=\"book4\" onChange={handleChange} value={formData.book4 || ''}/>\n            <p>Book 5</p>\n            <input name=\"book5\" onChange={handleChange} value={formData.book5 || ''}/>\n          </label>\n        </fieldset>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}